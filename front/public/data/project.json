[
  {
    "id": 1,
    "date": "2022.07 ~ 2022.8",
    "name": "Airbnb",
    "detail": "기존 웹 서비스 \"에어비앤비\" 클론코딩",
    "img": "images/airbnb.png",
    "icon": "images/icon/airbnb_icon.png",
    "video": "videos/airbnb.mp4",
    "team": false,
    "skills": {
      "skill": "REACT, JAVASCRIPT, HTML/CSS, RECOIL",
      "organization": "라이징캠프",
      "detail": "웹 프론트엔드에 관심을 가지게 되면서 방학기간동안 실력을 늘리고자 라이징캠프(웹)을 들었습니다. 일주일에 한번씩 수업을 들으며 받은 과제를 클론 코딩에 적용하는 식으로 진행하였습니다.",
      "github": "https://github.com/yeeun426/airbnb_web",
      "video": "https://drive.google.com/drive/folders/113-xXCJ0R3WV6a9f4WHf79QP1Io8UKCT",
      "role1": "1. 메인페이지\n - 반복되는 컴포넌트들은 데이터만 변경하여 사용될 수 있는 컴포넌트로 분리\n - 카카오맵 api를 사용하여 지도를 구현\n -위도, 경도를 데이터로 저장시켜 마커를 이용해 장소의 가격 표시\n - 하트 버튼 활성화위해 styled 컴포넌트의 props 기능을 사용 \n \n2. 세부화면 \n - 가격정보는 스크롤 위치에 따라 움직이고 특정 위치에서는 고정 시킴",
      "role2": "3. 검색페이지\n 리코일을 사용하여 atom에 고유한 키값에 ‘country’를 저장하고 검색 페이지로 변경 시 이 값을 저장시킴.\n\n 4. 호스트되기 \n - swiper.js 라이브러리를 사용하여 호스트의 정보를 보여줌"
    },
    "QnA": [
      {
        "id": "process",
        "question": "프로젝트는 어떤 식으로 진행됐나요? ",
        "answer": "일주일에 하루 웹에 대한 수업을 듣고 일주일간의 과제를 받습니다.\n이를 클론코딩에 녹여내어 과제를 진행하고 발표하여 피드백을 받는식으로 진행했습니다."
      },
      {
        "id": "role",
        "question": "프로젝트에서 담당한 파트는 뭔가요?",
        "answer": "수업을 들으며 처음한 프로젝트로 1인 프로젝트입니다.\n백엔드 개발은 따로 없었기 때문에 이를 제외한 모든 부분(퍼블리싱, 프론트엔드)을 담당하였습니다."
      },
      {
        "id": "learn",
        "question": "이 프로젝트를 통해 배운점은 뭔가요?",
        "answer": "[컴포넌트 분리 / 재사용]\n- header나 footer와 같은 모든 화면에서 반복적으로 사용될 수 있는 컴포넌트 단위로 화면을 분리시키고 재사용 가능하게 하는 방식이다.\n- 틀은 반복되지만 안에 데이터만 바뀌는 메인 화면의 숙소 리스트들에 경우, 하나의 컴포넌트를 만들고 반복적으로 데이터만 변경하여 뿌려주도록 구현하였다.\n\n[카카오맵 API]\n- 카카오맵 api를 사용하여 지도를 구현했고 위도, 경도를 데이터로 저장시켜 그 위치에 마커를 찍어 가격을 표시하였다.\n\n[리코일]\n- 리코일을 사용하여 atom에 고유한 키값에 기본값 ‘country’와 기본값인 ‘여행지 검색’을 저장하고 필요한 컴포넌트에서 이 값을 사용할 수 있게 하였다.\n- 리코일은 검색 기능에서 나라를 선택할 때 다음 페이지로 넘어가도 선택한 나라가 띄어져 있도록 하는 데 사용되었다.\n- 만약 나라를 선택하지 않고 검색을 누른다면 ‘여행지 검색’ 문구가 뜨게 된다.\n\n[styled components]\n- 스타일드 컴포넌트를 사용하여 상속과 props를 유동적으로 사용하여 스타일링할 수 있었다.\n- 예를 들어 메인 화면에서 하트 버튼이 true일 때 빨간색으로, false일 때 흰색으로 칠하고 싶었고 이 기능에 스타일드 컴포넌트의 props 기능을 사용할 수 있었다.\n- 하트 버튼을 눌렀을 때 like.like를 false로 바꾸는 함수를 작성하였고 like.like의 boolean 값을 받아 스타일드 컴포넌트에 전달하여 boolean 값에 따라 fill의 색을 다르게 부여하는 방식으로 사용하였다. \n\n[반응형 웹]\n- 핵심 화면의 크기별 레이아웃이 변경되는 메인 화면을 모바일 버전까지 고려하여 반응형 웹으로 코딩하였다.\n- px단위를 최대한 지양하고 폰트는 rem으로, width나 height는 %단위, vw등의 상대적인 단위를 사용하여 반응형 웹으로 변경하였다.\n- 레이아웃이 달라지는 경우, 여행지가 한줄에 4개씩 줄이면 줄일 수록 3개, 2개, 1개로 보이도록 grid 속성을 사용하여 수정하였다.\n- 반응형 css 의 핵심인 미디어쿼리를 사용하여 화면의 해상도 별로 css 속성을 변경할 수 있게끔 하였다."
      },
      {
        "id": "disappointing",
        "question": "이 프로젝트에서 어려웠던 점은 무엇인가요?",
        "answer": "프론트엔드에 대해 모든걸 처음으로 배우고, 프론트엔드 개발자가 어떤 일을 하는건지 배우는 경험이었습니다.\nweek1 과제는 원하는 서비스를 골라 한페이지를 그대로 퍼블리싱해오는 태스크였습니다. \n당시 html, css에 대해 제대로 알지 못했고 수업에서 이러한 부분을 다루기보다 어떤 태그가 있는지, 웹이 무엇인지에 대해서 배웠기 때문에 처음부터 끝까지 스스로 css, html 공부하며 진행했던 점이 힘들었습니다. \n하지만 몰입과 집중으로 해낼 수 있었고, 오로지 나만의 코드로,  css를 다루는데 훨씬 능숙해질 수 있었습니다. 과제에 대한 발표를 진행하며 당시 멘토님께 피드백 받은 부분에 대해 수정하고, 다른 분들의 과제를 보며 부족한 부분을 매주 고쳐나갔습니다. 당시에는 모든게 배워야할 것이라 시간이 부족하고 어지럽기도 했지만, 그 후 이를 활용해 퍼블리싱 외주에 참여한 경험이 있습니다."
      }
    ]
  },
  {
    "id": 2,
    "date": "22.08.11 ~ 22.08.16",
    "name": "myRecipes",
    "detail": "식품의약품안전처 api 연동 레시피 검색 웹 프로젝트",
    "img": "images/myrecipes.png",
    "icon": "images/myRecipes_icon.png",
    "video": "videos/myrecipes.mp4",
    "team": false,
    "skills": {
      "skill": "REACT, JAVASCRIPT, HTML/CSS",
      "organization": "라이징캠프",
      "detail": "평소 다이어트를 자주 하는 편인데 그럴 때 항상 칼로리를 확인하곤 했습니다. 이러한 경험을 바탕으로 궁금한 음식을 검색하여 음식의 영양성분과 재료를 확인하고 칼로리가 적합하다 느꼈다면 상세페이지에서 레시피를 확인 할 수 있도록 제작했습니다.",
      "github": "https://github.com/yeeun426/myRecipes-web-project",
      "video": "https://drive.google.com/drive/folders/1kATYaHrN2w6lUqXJmRHM9gPEAcTMpnVN",
      "role1": "1. 로그인페이지\n - kakao 로그인을 요청하면 인가 요청이 생성되고, 엑세스 토큰을 획득하게 되면 사용자 정보를 요청 -> 사용 할 수 있게 된다. 이를 이용해 유저의 카카오톡 이름, 이메일, 프로필 사진을 가져옴.\n \n2. 메인페이지 \n - 식품의약품안전처 '조리식품의 레시피DB' API를 이용해  바로 호출하기보다는 postman이라는 서버통신 툴을 사용하여 정상작동하는지 먼저 확인 후 api 연결",
      "role2": "- 음식 이름('RCP_NM')속성에 검색한 단어('search')문자열이 포함되어있는지 includes 메서드를 사용하여 특정 문자열이 포함되어있는지 확인하는 방식으로 검색 기능을 구현\n \n 3. 상세페이지\n - api가 로딩이 되는 중 빈 배열을 갖고 있기 때문에 이를 이용하여 loading이 true로 바뀌게하여 로딩 스피너를 실행하게 하였다."
    },
    "learn": "기존 에어비앤비 클론코딩은 api를 연결하지 않고 제작했다면 본 프로젝트에서는 open API를 이용해 API 연동하는 연습을 할 수 있었다. 평소 다이어트를 자주 하는 편인데 그럴 때 항상 칼로리를 확인하곤 했다. 이러한 경험을 바탕으로 상세페이지에 들어가지 않아도 칼로리를 먼저 확인하고 칼로리가 적합하다고 느끼면 상세페이지에서 레시피를 확인할 수 있게 만들고자 하였다. api 연동 후 검색 기능을 구현하고 소셜 로그인(카카오)을 구현했다.",
    "QnA": [
      {
        "id": "process",
        "question": "프로젝트는 어떤 식으로 진행됐나요? ",
        "answer": "라이징캠프는 3주간의 클론코딩과 마지막 api 프로젝트를 보고 마지막 수료 테스트를 할 수 있는 사람을 선별합니다. 그 선별에 필요한 마지막 주 과제는 공공 api를 이용해 원하는 프로젝트를 진행하는 것이었습니다. 처음으로 공공api를 사용해보았고, 실제로 사용할 수 있을법한 다이어트용 사이트를 개발하였습니다. 일주일이라는 짧은 시간안에 완성해야했기에 간단히 음식을 검색하고 레시피를 확인할 수 있는 정도로만 개발하였습니다."
      },
      {
        "id": "role",
        "question": "프로젝트에서 담당한 파트는 뭔가요?",
        "answer": "개인 프로젝트입니다.\n백엔드 개발은 따로 없었기 때문에 이를 제외한 모든 부분을 담당하였습니다."
      },
      {
        "id": "learn",
        "question": "이 프로젝트를 통해 배운점은 뭐가 있나요?",
        "answer": "[OPEN API 활용]\n- 다양하고 재미있는 데이터들이 많이 있는 공공데이터포털에서 데이터를 사용하여 레시피를 검색할 수 있는 서비스를 제공하고자 했다.\n- 기존에는 실제 api없이 더미 데이터를 사용하여 통신하는 것처럼 코드를 작성했지만 이번에는 OPEN API를 사용하여 네트워크 통신을 하도록 했다.\n- 이 과정에서 api를 바로 호출하기보다는 postman이라는 서버통신 툴을 사용하여 API가 정상작동하는지 먼저 확인하고 실제 프로젝트에 적용하였다.\n\n[OPEN API CORS 오류]\n- 공공데이터포털에 API를 호출하다보니 흔히 보던 CORS 오류가 발생하였다. 다양한 해결방법이 있지만, 가장 간단한 방법으로 https://secret-ocean-49799.herokuapp.com 이 주소를 요청할 url 앞에다가 붙여주어 수월하게 해결할 수 있었다\n- ex) https://secret-ocean-49799.herokuapp.com/요청할 원래 url\n\n[로딩 스피너]\n- 로딩 스피너는 주로 네트워크 요청, 데이터 로딩, 페이지 전환 등의 작업이 이뤄지는 동안 부드럽게 회전하면서 화면에 표시 된다.- api가 로딩이 되는 중이라면 setFood함수가 빈 배열을 가지고 있을 것이다. 이를 이용하여 food가 빈 배열이라면 loading이 true로 바뀌게하여 스피너를 실행하게 하였다.\n\nif(search === null || search === '') {\n    setLoading(true);\n    setFood([]);\n    for (let i = 0; i < data.data.COOKRCP01.row.length; i++) {\n      if(data.data.COOKRCP01.row[i].RCP_SEQ != null) {\n          setFood(prev => {return[...prev, data.data.COOKRCP01.row[i]]})\n          setLoading(false);\n      }else{\n          alert('error');\n      }\n    }\n }\n\n[검색 기능]\n- 처음 음식리스트가 메인화면에 뜨게 되는데 이 때 원하는 음식을 검색하면 검색한 단어가 포함된 모든 음식들이 검색이 되는 기능이다.\n- 구현한 방법은 food 배열에서 filter 메서드를 호출하도록 했다. 즉, 음식의 이름('RCP_NM')속성에 검색한 단어('search')문자열이 포함되어있는지 includes 메서드를 사용하여 특정 문자열이 포함되어있는지 확인하게 된다.\n- food.filter((row) => row.RCP_NM.includes(search))\n\n[kakao 소셜 로그인]\n- 카카오톡 로그인을 통해 로그인한 유저의 카카오톡 이름, 이메일을 가져올 수 있도록 하였다.\n- 백엔드가 없었기 때문에 프론트단에서만 실행될 수 있도록 작업하였다.\n- 카카오 로그인 버튼을 누르면 kakao 인가 요청이 생성된다. 이 요청은 사용자를 카카오 인증 서버로 리디렉션하게된다.\n- 카카오 인증서버는 인증 코드를 생성하고, 웹으로 리디렉션하게된다. 웹은 카카오에서 전달된 인증 코드를 받아 카카오 인증 서버에 엑세스 토큰을 요청한다.\n- 요청에는 클라이언트 아이디, 비밀 키, 리디렉션 url이 포함된다. 엑세스 토큰을 획득하게 되면 이를 이용해 사용자 정보를 요청하고 사용할 수 있게 되는 원리를 이용하였다."
      },
      {
        "id": "disappointing",
        "question": "이 프로젝트에서 아쉬운/보완하고 싶은 점은 무엇인가요?",
        "answer": "카카오 소셜 로그인을 백엔드와의 통신 전까지만 구현할 수 있었는데 제대로 이해하지 못한채 시간에 쫓겨 블로그의 글들만 따라가기 급급하게 진행했던게 아쉽습니다."
      }
    ]
  },
  {
    "id": 3,
    "date": "22.6 ~ 22.9",
    "name": "MAPLIX",
    "detail": "2022 관광데이터활용 공모전 우수상",
    "img": "images/maplix.jpeg",
    "icon": "images/maplix_icon.png",
    "video": "videos/maplix.mp4",
    "team": true,
    "skills": {
      "skill": "REACT, JAVASCRIPT, HTML/CSS",
      "organization": "한국관광공사, 카카오",
      "detail": "코로나 시대를 거치며 미디어 시청자가 증가함에 따라, 드라마, 영화, 예능 등의 촬영지를 찾는 방문객도 늘어났습니다. 이에 착안하여, 미디어 촬영지를 중심으로 정보를 제공하는 서비스를 목표로 하였습니다.",
      "data": "카카오맵API, 한국관광공사 두루누비 정보 서비스 API",
      "github": "https://github.com/yeeun426/MAPLIX",
      "video": "http://ec2-3-37-76-88.ap-northeast-2.compute.amazonaws.com/",
      "role1": "1. 메인페이지\n - 메인페이지 퍼블리싱과 주된 기능을 담당\n- 대부분 api 연결을 통해 버튼 hover시, 데이터가 보여지도록 구현\n \n2. 검색 페이지 \n - 검색 필터 선택 시, api로 불러온 데이터의 카테고리와 비교 후 데이터를 뿌려줌 \n - 카카오맵 api를 불러와 적절한 한국의 지도를 보여주도록 설정\n - 장소 결과에 페이지네이션을 적용하기 위해 컴포넌트로 구현하여 재사용할 수 있도록 구현",
      "role2": "3. 추천코스페이지\n - '한국관광공사 두루누비 정보 서비스 API'를 사용하여 관광공사측에서 알려주는 코스를 지역별로 추천코스로 구현\n - api가 불러와지는 시간동안 스피너가 돌아가며 데이터가 불러와지고 있음을 시각적으로 보여줌 \n\n 4. 커뮤니티 페이지 \n - 해당 게시물을 클릭했을 때 아이디 값이 같은 경우 해당 게시물에 대한 상세 모달창이 뜨면서 외부 클릭을 막도록 구현 \n\n 퍼블리싱은 모두 혼자 진행했습니다.\n\n** 제가 구현한 기능들만 작성해두었습니다. **"
    },
    "QnA": [
      {
        "id": "unique",
        "question": "이 프로젝트가 공모전에서 수상할 수 있었던 특징이나 차별성이 있나요?",
        "answer": "- 미디어 시청자를 위한 맞춤형 서비스 제공미디어 팬들이 즐길 수 있는 독특하고 차별화된 여행 경험을 제공합니다.\n- 사용자 중심 여행 코스 생성 기능사용자가 직접 촬영지를 포함한 나만의 여행 코스를 설계할 수 있습니다.\n- 여행 도장깨기 기능방문한 촬영지를 기록하며 특별한 여행 일정을 추억으로 남길 수 있습니다.\n- 추천 여행 코스 제공공공 API를 활용해 촬영지를 포함한 맞춤형 추천 코스를 제공합니다."
      },
      {
        "id": "process",
        "question": "프로젝트는 어떤 식으로 진행됐나요?",
        "answer": "몇 차례 공모전 서류 탈락을 경험한 후, 가장 중요한 것은 서류를 통과할 수 있는 매력적인 아이디어라는 점을 깨달았습니다. 이에 관광 데이터를 활용해 현시점에서 가장 주목받을 만한 주제를 선정하기 위해 팀원들과 많은 시간을 투자했습니다. 당시 코로나가 잠잠해지는 시기를 반영하여, 미디어 촬영지를 중심으로 한 여행 서비스를 주제로 결정했고, 이 아이디어로 서류 심사를 통과할 수 있었습니다.\n서류 합격 후 본격적으로 프로젝트를 시작하면서 두려움도 있었습니다. 팀원 모두가 제대로 된 웹 개발 경험이 없었고, 데이터베이스 수업에서 진행했던 토이 프로젝트가 유일한 경험이었습니다. 저는 당시 라이징캠프에서 클론 코딩으로 에어비앤비를 개발하며 지도 API를 학습하고 있었고, 이를 기반으로 공모전에서 활용할 기술을 익히며 프로젝트를 진행했습니다.\n역할은 데이터 처리, 백엔드, 프론트엔드로 나누어 진행했으며, 저는 프론트엔드 개발을 담당했습니다. 하지만 프로젝트가 진행될수록 역할 구분은 무의미해졌고, 어려운 문제를 함께 해결하며 협업의 중요성을 배웠습니다. 작업의 막바지에는 남은 기능들을 노션에 정리하여 역할을 배분하여 빠르게 진행했습니다."
      },
      {
        "id": "role",
        "question": "프로젝트에서 담당한 파트는 뭔가요?",
        "answer": "[메인페이지]\n- 메인페이지 퍼블리싱과 주된 기능을 담당\n- 대부분 api 연결을 통해 버튼 hover시, 데이터가 보여지도록 구현\n\n[검색 페이지]\n- 검색 필터 선택 시, api로 불러온 데이터의 카테고리와 비교 후 데이터를 뿌려줌\n- 카카오맵 api를 불러와 적절한 한국의 지도를 보여주도록 설정\n- 장소 결과에 페이지네이션을 적용하기 위해 컴포넌트로 구현하여 재사용할 수 있도록 구현\n\n[추천코스페이지]\n- '한국관광공사 두루누비 정보 서비스 API'를 사용하여 관광공사측에서 알려주는 코스를 지역별로 추천코스로 구현\n- api가 불러와지는 시간동안 스피너가 돌아가며 데이터가 불러와지고 있음을 시각적으로 보여줌\n\n* 모달 : 사용자 경험을 고려한 팝업창으로 게시물을 클릭했을 때 아이디 값이 같은 경우 해당 게시물에 대한 상세 모달창이 뜨면서 외부 클릭을 막도록 구현\n\n* 회원가입 페이지 : 사용자 계정 생성 및 인증 기능 개발.\n\n*** 퍼블리싱은 모두 혼자 진행했습니다 ***"
      },
      {
        "id": "learn",
        "question": "이 프로젝트를 통해 배운점은 뭐가 있나요?",
        "answer": "[페이지네이션]\n- 대량의 데이터를 효과적으로 나누어 보여주는 페이지네이션을 구현하면서, 사용자가 더 쉽게 정보를 찾을 수 있도록 하였습니다.\n- 예를 들어, 여행지 목록을 페이지별로 나누어 로딩 속도를 개선했습니다.\n\n```jsx\nconst paginate = (data, currentPage, pageSize) => {\n  const startIndex = (currentPage - 1) * pageSize;\n  return data.slice(startIndex, startIndex + pageSize);\n};\n```\n\n[스피너 (Spinner)]\n- 공공 api를 불러오기 위해 데이터를 로딩 중일 때 사용자에게 기다림을 알려주는 스피너를 구현했습니다. 이는 로딩 중에도 사용자 경험을 방해하지 않도록 도와줍니다.\n- 예를 들어, 사용자가 추천 코스를 기다릴 때, 로딩 스피너를 보여주도록 구현했습니다.\n\n[모달 (Modal)]\n- 사용자가 중요한 정보를 확인할 수 있도록 모달 창을 구현했습니다. 예를 들어, 촬영지에 대한 상세 정보를 확인하는 모달을 추가했습니다.\n\n```jsx\nconst Modal = ({ show, onClose, content }) => {\n  if (!show) return null;\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\">\n// 내용 ..\n      </div>\n    </div>\n  );\n};\n```\n\n[협업의 중요성]\n- 팀원들과의 원활한 협업을 위해 지속적인 커뮤니케이션이 중요하다는 점을 깨달았습니다. 각자 맡은 역할을 충실히 하되, 서로의 작업에 피드백을 주고받으며 함께 문제를 해결하는 과정에서 더 나은 결과물을 만들 수 있었습니다."
      },
      {
        "id": "disappointing",
        "question": "이 프로젝트에서 아쉬운/보완하고 싶은 점은 무엇인가요?",
        "answer": "팀원 중 저만이 퍼블리싱 경험이 있었기 때문에 UI 작업을 전담하게 되었습니다. 이로 인해 해보고 싶었던 몇 가지 기능 구현을 다른 팀원에게 맡겨야 했습니다. 또한, 퍼블리싱 작업이 끝난 후에는 사용자 경험을 고려한 세부 조정이 부족했던 점도 아쉬웠습니다. PT 발표 후 ui/ux가 조금 미흡햇다는 평가를 받았습니다. 이후 UI/UX에 대한 중요성을 더 깊이 인식하게 되었고, 기능과 디자인의 균형을 맞추는 것이 중요하다는 교훈을 얻었습니다."
      }
    ]
  },
  {
    "id": 4,
    "date": "22.8.20 ~ 22.9.2",
    "name": "wanted",
    "detail": "기존 웹 서비스 \"원티드\" 클론코딩",
    "img": "images/main/wanted.webp",
    "icon": "images/wanted_icon.png",
    "video": "videos/wanted.mp4",
    "team": true,
    "skills": {
      "skill": "REACT, JAVASCRIPT, HTML/CSS",
      "organization": "라이징캠프",
      "detail": "본 프로젝트에서는 직접 실제 API와 api 작동 확인을 위해 Postman을 사용하며 서버개발자들과 소통할 수 있었습니다. 처음으로 개발자가 만든 api를 가지고 API 명세서를 보면서 서버 개발자분들과 소통하며 프로젝트를 진행할 수 있었습니다.",
      "data": "",
      "github": "https://github.com/yeeun426/wanted_web_ony",
      "video": "https://drive.google.com/drive/folders/1kqTYssxoAYglwE3fiOZ2iuflulpIJ2lV",
      "role1": "1. 메인페이지\n - SwiperCore를 사용하여 자동재생, 네비게이션과 같은 핵심기능을 구현\n - 로그인했을 때, 로그인하지 않았을 때 보이는 데이터를 sessionStorage을 이용해 다르게 함. \n\n2. 북마크페이지 \n - 북마크한 기업들만 filter함수를 사용해 북마크 페이지에서 보이도록 함.",
      "role2": "3. 로그인/회원가입 페이지\n -props를 매개변수로 받아 모달창이 켜졌을 때와 꺼졌을 때를 구분 \n -useEffect를 이용해 페이지 스크롤 위치를 고정하고 스크롤이 생기지 않도록 함. \n-useState 훅을 사용하여 email, signup, passwordPage를 관리하며 emailValid로 이메일 유효성을 나타냄\n- axios를 사용하여 간단하게 HTTP 요청을 처리하여 로그인/로그아웃 기능 구현"
    },
    "QnA": [
      {
        "id": "process",
        "question": "프로젝트는 어떤 식으로 진행됐나요?",
        "answer": "라이징캠프에서는 3주간의 클론 코딩과 마지막 API 프로젝트를 통해 최종 수료 테스트 기회를 제공하며, 테스트를 통과한 사람들만 수료할 수 있습니다.\n- 3주간 진행한 에어비앤비 클론코딩: HTML, CSS, JavaScript 등 기본 웹 기술을 활용해 사용자 인터페이스를 재현\n- API 프로젝트(myRecipes) : 공공 API를 연동한 프로젝트를 통해 데이터 처리와 API 통신 경험을 쌓음\n- 최종 수료 과제: 백엔드와 협업하여 실무 기반의 클론코딩 프로젝트 진행. 저는 원티드(구인구직 플랫폼)를 클론코딩하며, 매주 진행 상황에 대해 피드백을 받아 프로젝트를 발전시켰습니다. 특히 API 연결 문제는 백엔드 개발자와 적극 소통하며 해결했습니다."
      },
      {
        "id": "role",
        "question": "프로젝트에서 담당한 파트는 뭔가요?",
        "answer": "백엔드 개발1명, 프론트엔드 개발 1명인 구성으로 프론트엔드 개발을 맡았습니다."
      },
      {
        "id": "learn",
        "question": "이 프로젝트를 통해 배운점은 뭐가 있나요?",
        "answer": "[swiper]\n- 스와이프 기능이 있는 슬라이드를 만들기 위해 Swiper 라이브러리를 사용했다.\n- SwiperCore를 사용하여 스와이프 동작과 같은 핵심기능을 가져와 구현하였다.\n- Swiper 컴포넌트를 사용하며 Swiper 컴포넌트 내부에 SwiperSlide는 각각의 슬라이드를 나타낸다. 이 안에서 데이터를 매핑하여 각 슬라이드를 렌더링하도록 했다.\n- 이러한 기능들을 활용하여 자동재생 및 네비게이션 기능을 사용할 수 있었다.\n\n[styled-components]\n- CSS 스타일링은 styled-components를 사용하여 구현하였다.\n\n[모달창 구현]\n- props를 매개변수로 받아 모달창이 켜졌을 때와 꺼졌을 때를 구분시켰다.\n- useEffect를 이용해 컴포넌트가 마운트될 때 페이지 스크롤 위치를 고정하고 스크롤이 생기지 않도록 한다.\n- 스크롤이 고정된 상태에서 컴포넌트가 언마운트될 때, 스크롤 위치를 원래대로 복원시켰다.\n\n[index 하드코딩 된 부분 더미데이터로 컴포넌트]\n- 하드코딩 된 코드를 모두 더미데이터로 빼내어 컴포넌트화 시켜줌으로써 반복되는 코드를 짧게 줄일 수 있었다.\n\n[버튼 hover]\n- 버튼에 마우스 커서를 가져가면 효과가 나타나도록 :hover를 이용해 CSS로 효과를 주었다.\n\n[로그인 회원가입 API 연결]\n- useState 훅을 사용하여 email, signup, passwordPage를 관리하며 emailValid로 이메일 유효성을 나타냈다.\n- 회원가입 요청은 axios.post 메서드를 이용해 서버에서 받은 응답을 처리하며 요청이 실패할 경우 오류를 처리한다.\n- 이메일 유효성 검사는 axios.get() 메서드를 사용하여 구현하였다.\n- 로그인(ClickLogin)은 axios.post() 메서드를 사용하여 email, password를 body로 전달하여 POST 요청을 보낸다.\n- axios를 사용하여 간단하게 HTTP 요청을 처리하였으며 Promise 기반의 구조로 비동기 작업을 구현하였다."
      },
      {
        "id": "disappointing",
        "question": "이 프로젝트에서 아쉬운/보완하고 싶은 점은 무엇인가요?",
        "answer": "처음으로 백엔드 개발자가 제공한 API 명세서를 기반으로 작업하면서 문서화의 중요성과 효율성을 실감했으며, 이를 이해하고 실제 API 동작을 확인하며 서버 개발자와 소통하는 법을 배웠습니다. 그러나 짧은 기간 안에 퍼블리싱과 기능 구현을 병행하면서 작업량을 조율하는 데 어려움을 겪었고, 특히 \"이력서 페이지\"의 일부 기능을 구현하지 못한 점이 아쉬웠습니다. 이번 프로젝트를 통해 백엔드와의 협업 프로세스를 경험하며 실시간 API 통신의 중요성과 문제 해결 능력을 키웠고, 피드백을 적극 반영해 개발 역량을 성장시킬 수 있었습니다."
      }
    ]
  },
  {
    "id": 5,
    "date": "22.10 ~ 23.2",
    "name": "GNUVILAGE",
    "detail": "코딩 중앙 동아리 \"그누빌\" 웹 프로젝트",
    "img": "images/gnuvilage.png",
    "icon": "images/gnuvilage_icon.png",
    "video": "videos/gnuvilage.mp4",
    "team": true,
    "skills": {
      "skill": "REACT, JAVASCRIPT, HTML/CSS",
      "organization": "그누빌 (교내 중앙동아리)",
      "detail": "본 제시안은 동아리 홍보 및 동아리 부원 내 소통, 기록용 웹 개발을 목적으로 하고있습니다. 주 소비자층인 대학생에 맞춰 정서에 맞게 심플하지만 한눈에 들어오는 분위기를 이끌어냈습니다.",
      "github": "https://github.com/yeeun426/gnuvillage-froㄴntend",
      "video": "https://gnuvil.swygbro.com/",
      "role1": "1. 메인페이지\n - 동아리의 설명/역사를 보여주도록 함. \n\n2. 스터디성과 \n - 북마크한 기업들만 filter함수를 사용해 북마크 페이지에서 보이도록 함.",
      "role2": "3. 공지사항\n\n4. 동아리 활동 사진"
    },
    "QnA": [
      {
        "id": "process",
        "question": "프로젝트는 어떤 식으로 진행됐나요?",
        "answer": "동아리 활동의 일환으로 동아리 자체 웹사이트 프로젝트를 진행했습니다. 주 1회 전체 팀 정기 회의를 통해 작업 진행 상황을 공유하고 각 팀원의 업무와 일정에 대해 논의했습니다.  프론트엔드 팀은 주 2회 진행 상황 및이슈를 공유했습니다. 동아리 웹사이트의 목표와 요구사항을 정의한 후 개발 방향을 구체화하며, 작업 결과물에 대한 피드백을 받는 방식으로 진행했습니다. 미팅 내용은 노션에 기록하여 일정과 작업 사항을 명확히 관리하며, swygbro 배포 툴을 활용해 배포를 진행했습니다."
      },
      {
        "id": "role",
        "question": "프로젝트에서 담당한 파트는 뭔가요?",
        "answer": "전체 퍼블리싱 작업을 주도하고 메인 페이지, 동아리 소개, 동아리 히스토리, 활동 사진, 스터디 페이지 기능 구현 담당했습니다. UI/UX 디자인과 동적 요소를 구현하여 동아리를 효과적으로 홍보하기 위해 노력했습니다."
      },
      {
        "id": "learn",
        "question": "이 프로젝트를 통해 배운점은 뭐가 있나요?",
        "answer": "[git]\n- 협업 도구인 Git을 활용하며 형상 관리의 중요성을 배웠습니다.\n- `git branch` / `git checkout`: 팀원이 각자 작업할 브랜치를 생성하고 전환하여 작업 영역을 분리했습니다. 이를 통해 충돌 가능성을 최소화했습니다.\n- `git add` / `git commit`: 작업 파일을 스테이징하고 커밋 메시지를 작성하여 변경 사항을 체계적으로 기록했습니다. 커밋 메시지 규칙을 정해 작업 내용을 명확히 전달했습니다.\n- 코드 충돌 상황에서는 `git diff`를 사용해 변경 사항을 비교하며 문제를 해결했고, `git log`로 변경 이력을 추적하며 작업 흐름을 관리했습니다.\n- Git 활용을 통해 작업 과정이 체계적으로 정리되고, 팀원 간 코드 공유가 원활히 이루어졌습니다."
      },
      {
        "id": "disappointing",
        "question": "이 프로젝트에서 아쉬운/보완하고 싶은 점은 무엇인가요?",
        "answer": "팀원들 간 소통 부족으로 어려움을 겪은 경험이 있습니다. 학기 중 시험 기간이 겹치며 백엔드 팀은 작업을 중단한 반면, 프론트엔드 팀은 진행을 이어가야 해 갈등이 깊어졌고, 일부 팀원은 프로젝트에서 이탈하겠다는 의사를 밝히기도 했습니다.\n이 위기를 극복하기 위해 팀원들과 개별적으로 대화를 나누며 어려움을 경청했고, 서로의 상황을 이해할 수 있도록 공감대를 형성했습니다. 회의 일정을 재조정하고 진행 상황을 투명하게 공유할 수 있는 노션을 구축했습니다."
      }
    ]
  },
  {
    "id": 6,
    "date": "23.6.23 ~ 23.6.24",
    "name": "GIVER",
    "detail": "학교 생활에 어려움을 겪는 장애인과 비장애인 매칭 서비스",
    "img": "images/giver.png",
    "icon": "images/giver_icon.png",
    "video": "videos/giver.mp4",
    "team": true,
    "skills": {
      "skill": "REACT, JAVASCRIPT, HTML/CSS, SOCKET.IO",
      "organization": "GDSC - hufs summer hackerton",
      "detail": "본  프로젝트는 장애인의 학교생활을 돕기 위한 웹 개발을 목적으로 하고 있습니다. 주 소비자층인 기존의 앱과 다르게 장애인의 정서에 맞게 그들이 쉽게 도움을 요청할 수 있도록 웹으로 제작하였습니다.",
      "github": "https://github.com/yeeun426/Giver_front-end",
      "video": "videos/giver.mp4",
      "role1": "",
      "role2": ""
    },
    "QnA": [
      {
        "id": "purpose",
        "question": "해커톤 주제를 장애인 관련으로 잡은 이유가 무엇인가요?",
        "answer": "4차 산업혁명 시대의 IT 기술 발달은 장애인의 신체적 한계를 극복할 기회를 제공하며, 이로 인해 장애인들이 사회에서 더욱 중요한 역할을 맡을 가능성이 커지고 있습니다. 이는 장애인들이 사회에 적극적으로 참여할 수 있는 기회가 확대된다는 점을 의미합니다. 그러나 여전히 많은 장애인이 디지털 기술 시대에 필요한 고급 기술과 전문성을 배울 기회를 충분히 제공받지 못하고 있습니다. 특히 대학 교육의 기회가 제한되어 있어, 이러한 문제는 사회 진출의 걸림돌이 되고 있습니다.\n이를 해결하기 위해 장애 학우들이 대학 생활에 적응하고 성공적으로 사회에 진출할 수 있도록 돕는 애플리케이션이 필요합니다. 이러한 웹은 장애 학생들에게 학업 및 생활 지원을 제공함으로써 학교 적응을 돕고, 나아가 그들의 사회적 참여와 자립을 촉진하는 데 목적이 있습니다. 동시에, 이러한 노력을 통해 돕는 사람들도 사회적 약자를 지원함으로써 더불어 사는 사회의 가치를 깨닫고 인류애를 키울 수 있습니다."
      },
      {
        "id": "role",
        "question": "프로젝트에서 담당한 파트는 뭔가요?",
        "answer": "프론트엔드 개발을 맡아 로그인/회원가입 기능과 실시간 채팅 기능을 구현했으며 퍼블리싱을 맡아서 진행했습니다."
      },
      {
        "id": "learn",
        "question": "이 프로젝트를 통해 배운점은 뭐가 있나요?",
        "answer": "[Socket.IO]\n- 실시간 채팅 기능을 구현하며, Socket.IO의 양방향 이벤트 작동 원리와 이를 활용한 클라이언트-서버 간 실시간 데이터 통신에 대해 이해할 수 있었습니다.\n- 장애인과 비장애인이 자유롭게 소통할 수 있는 대화 창구를 구현하였습니다. 사용자가 입력한 메시지가 실시간으로 양방향으로 전달되고, 메시지 수신 및 송신 시 이벤트 핸들러를 통해 사용자 경험을 향상시켰습니다.\n- 메인 채팅\n    - 사용자의 위치 코드(`locationalCode`)에 따라 대화방을 자동으로 생성 및 조인(join)하도록 설계했습니다.\n    - Axios를 사용해 서버에서 채팅 데이터를 초기화 및 동기화하고, Socket.IO를 활용해 실시간으로 새로운 메시지를 수신했습니다.\n    - `socket.on` 이벤트 리스너를 활용해 새 메시지가 도착하면 UI가 즉시 업데이트되도록 구성했습니다.\n- 대화방 관리\n    - 새로운 채팅방 생성, 입장, 퇴장 기능 구현(`new room`, `join room`, `leave room` 이벤트).\n\n[시간 관리의 중요성]\n- 제한된 시간 내에 결과물을 완성하기 위해 핵심 기능에 집중하는 선택과 집중의 중요성을 배웠습니다. 기능 우선순위를 설정하고, 일정 관리가 단기 프로젝트 성공에 얼마나 중요한지 실감했습니다.\n\n[협업의 어려움과 커뮤니케이션]\n- 팀원이 어려움을 겪는 상황에서 사전에 작업 방향과 도구에 대해 더 명확히 조율했어야 했다는 점을 깨달았습니다. 앞으로는 팀원들과 작업 구조를 미리 공유하고, 외부 도구 사용에 따른 리스크를 검토하는 과정의 중요성을 알게되었습니다."
      },
      {
        "id": "disappointing",
        "question": "이 프로젝트에서 아쉬운/보완하고 싶은 점은 무엇인가요?",
        "answer": "한 팀원이 HTML/CSS에 어려움을 느끼며 개발 속도가 지체되는 상황이 발생했습니다. 이를 해결하기 위해 팀원은 ChatGPT를 사용해 UI 관련 코드를 작성했지만, 생성된 코드가 기존 구조와 호환되지 않아 Git 충돌이 발생했고 이를 수정하는 데 예상보다 많은 시간이 소요되었습니다. 특히, gpt로 생성된 코드가 프로젝트의 맥락과 맞지 않는 부분이 많아, 제가 직접 코드를 일일이 수정하며 시간을 소비했던 점이 아쉬웠습니다. 결과적으로, 몇몇 UI가 제시간에 완성되지 못했고, 기능 구현에 더 초점을 맞출 수밖에 없었습니다."
      }
    ]
  },
  {
    "id": 7,
    "date": "23.4 ~ 23.7",
    "name": "NDGD",
    "detail": "고용노동 공공데이터 활용 공모전",
    "img": "images/ndgd.png",
    "icon": "images/ndgd_icon.png",
    "video": "videos/ndgd.mp4",
    "team": true,
    "skills": {
      "skill": "REACT, JAVASCRIPT, HTML/CSS",
      "organization": "고용노동부",
      "detail": "본 프로젝트는 개인 맞춤형 산재 보상 정보(보험금 액수, 승인 확률) 를 제공할 뿐민 아니라 노동자에게 필요한 정보를 직접 제공, 또는 해당 정보가 있는 곳으로 연결해주는 노동자를 위한 산재 보상 정보의 메카",
      "data": "고용노동 공공데이터",
      "github": "https://github.com/yeeun426/NDGD_front",
      "video": "videos/ndgd.mp4",
      "role1": "1. 메인페이지\n - swiper 라이브러리를 사용해 웹 사이트의 기능들을 배너로 만듦\n - 산재 보험 서비스이기 때문에 나이대를 높게 잡고, 다양한 나이대의 사용자가 이용하기 편하게 메인페이지를 어렵지 않게 퍼블리싱하였음\n\n2. 로그인 페이지\n-props를 매개변수로 받아 모달창이 켜졌을 때와 꺼졌을 때를 구분\n-useState를 사용해 emailValid로 이메일 유효성을 나타냄\n-비동기로 로그인/로그아웃 기능 구현",
      "role2": "3. 산재 보상 절차\n - 산재 보상 절차에 대해 알려주며 본 페이지에서 바로 산재지정 의료기관을 확인할 수 있게함.\n- 산업재해조사표를 pdf로 다운받는 형식으로 버튼을 만들어 웹의 편리성을 높임\n\n 4. 확률 계산기 \n - 사내 상황을 formData에 담아 post요청을 하면 수령가능 확률/보험료의 상태를 업데이트하여 보여줌"
    },
    "QnA": [
      {
        "id": "unique",
        "question": "본 프로젝트의 목적이 무엇인가요?",
        "answer": "1. 노무사나 변호사가 필요한 경우 노동자가 본인의 상황에 따른 가능한 보상 정도에 대해 어느 정도 파악하고 있어야 좋은 노무사또는 변호사를 선택할 수 있습니다. 하지만 이는 노동자가 개인적으로 수행하기엔 어려운 단계입니다. 이를 위해 개인 맞춤형 산재 보상 정보를 제공하는 서비스가 필요하다고 생각했습니다.\n2. 산재 승인 및 보험금 수령의 절차가 복잡하며, 관련 정보가 분산되어 있기 때문에 산재가 발생했을 때 노동자 스스로 수많은 검색의 단계를 거쳐야 합니다. 이 때문에 기존의 웹사이트들 보다 좀 더 직관적이고 실질적인 도움이 되는 정보를 제공하는 웹 플랫폼이 필요하다는 생각이 들었습니다."
      },
      {
        "id": "process",
        "question": "프로젝트는 어떤 식으로 진행됐나요?",
        "answer": "대학교 친구들에게 공모전에 나갈 생각없냐는 제안을 받고 ‘고용노동 공공데이터 활용 공모전’에 참여하게 되었습니다. 일주일에 2~3번정도 회의를 하며 현재 어디까지 개발되고 있는지 상황을 공유했습니다. 그 후 이슈가 있는 부분은 함께 이야기하며 대안을 찾아나갔습니다."
      },
      {
        "id": "role",
        "question": "프로젝트에서 담당한 파트는 뭔가요?",
        "answer": "프론트엔드 개발을 맡아 전체 퍼블리싱과, 로그인 페이지, 산재 보상 절차 방법 페이지, 보험금 모의 계산기, 수령 확률 계산기, 직업훈련 우수 기관 페이지, 산재 지정 의료기관 페이지, 커뮤니티등 프론트엔드의 모든 부분에 참여했습니다."
      },
      {
        "id": "learn",
        "question": "이 프로젝트를 통해 배운점은 뭐가 있나요?",
        "answer": "[사용자 중심 UI/UX]\n- 산재 보상 정보를 찾는 주요 사용자층이 나이대가 높은 경우가 많을 것이라고 판단하여, 가독성을 높이기 위해 기존 웹사이트들에 비해 글씨 크기를 크게 설정했습니다. 또한 버튼 크기와 간격을 적절히 조정해 시인성을 높이고, 마우스 또는 터치로 쉽게 조작할 수 있도록 UX를 개선했습니다.\n- 모든 기능에 한눈에 접근할 수 있도록 메인 페이지를 설계해 사용자들이 원하는 페이지로 쉽게 이동할 수 있게 했습니다. 이를 위해 주요 메뉴와 버튼을 한눈에 보이도록 배치하고, 헷갈리지 않도록 명확한 볼드 텍스트와 색상 대비를 활용했습니다.\n- 산재 보상 절차 방법 페이지에서는 사용자들이 필요한 자료를 빠르게 찾고 사용할 수 있도록, 최소 클릭만으로 필요한 정보를 다운로드하거나 외부 사이트로 바로 연결될 수 있는 단계를 설계했습니다.\n\n[Scroll Restoration]\n- Scroll Restoration은 웹 페이지에서 사용자가 뒤로가기, 앞으로가기를 실행했을 때 이전 페이지의 스크롤 위치를 유지하거나 초기화하는 기능입니다. 이를 구현하기 위해 React Router의 `useLocation` 훅을 사용하여 사용자가 페이지를 탐색할 때 항상 최상단으로 스크롤되도록 했습니다.\n- 구현 방법: 이 코드를 통해 사용자가 새 페이지로 이동할 때 이전 페이지의 스크롤 위치를 초기화하고, 새 페이지가 항상 처음부터 로드되도록 설정했습니다.\n```jsx\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n\nexport default ScrollToTop;\n```\n\n[Kakaomap API]\n- 마커를 클릭했을 때 해당 장소의 세부 정보를 보여주는 `InfoWindow`를 구현했습니다. 이를 통해 사용자는 지도의 마커를 직관적으로 이해할 수 있습니다. InfoWindow에 장소 이름과 설명, 링크를 추가해 사용자 경험을 향상시켰습니다.\n- 마커를 클릭하거나 특정 장소를 검색했을 때, 해당 위치를 중심으로 지도의 화면이 이동하도록 설정했습니다.\n\n[useParams]\n- 커뮤니티 게시글에서 특정 글을 클릭하면 `id` 값을 기반으로 동적 라우팅을 사용해 상세 페이지로 이동하도록 구현했습니다. React Router의 `useParams` 훅을 사용해 URL의 파라미터를 읽어 해당 데이터를 화면에 렌더링했습니다.\n```jsx\nimport { useParams } from 'react-router-dom';\n\nconst PostDetail = () => {\n  const { id } = useParams();\n  const post = postData.find((item) => item.id === Number(id));\n\n  return (\n    <div>\n      <h1>{post.title}</h1>\n      <p>{post.content}</p>\n    </div>\n  );\n};\n\nexport default PostDetail;\n```\n- `/post/:id` 형태의 URL을 통해 사용자와 검색 엔진이 게시글의 내용을 쉽게 이해하고 접근할 수 있도록 했습니다."
      },
      {
        "id": "disappointing",
        "question": "이 프로젝트에서 아쉬운/보완하고 싶은 점은 무엇인가요?",
        "answer": " 팀원 한분이 남는 일이 있냐고 하셔서 산재지정병원 리스트를 연결하는 부분을 부탁드렸습니다. 제가 페이지 퍼블리싱은 이미 마쳤던 상황이라 공공 api 연결만 남은 상황이었습니다. 당시 그 팀원분은 프론트엔드를 해본적이 없으셨고, 제출이 얼마 남지 않은 상황에서 그 부분이 잘 안된다고 이야기를 하셔서 제가 빠르게 처리했던 경험이 있습니다. 이 전에 프로젝트에서 공공 api에 통신해본 적이 있었기 때문에 어렵지 않게 처리할 수 있었습니다. 다만, 시간이 촉박하여 다른 페이지를 마무리 짓지 못할거 같아 마음이 조급했던것 같습니다."
      }
    ]
  },
  {
    "id": 8,
    "date": "25.3.13 ~ 25.3.21",
    "name": "Y Car",
    "detail": "중고차 거래 플랫폼 구현을 통한 성능 향상 방안 연구",
    "img": "images/portfolio/ycar/ycar.webp",
    "icon": "images/icon/car_icon.png",
    "youtube": "https://www.youtube.com/watch?v=TaUhpPcvbeM",
    "team": true,
    "skills": {
      "skill": "REACT, JAVASCRIPT, Tailwind, Spring",
      "organization": "유레카 SW 교육",
      "detail": "프론트엔드와 백엔드를 모두 직접 개발하며, 실제 서비스에서 발생할 수 있는 보안 취약점을 고민하고 성능 향상을 위한 캐싱 기법 등을 적용해보는 데 목적이 있었습니다.",
      "github": "https://github.com/y-car-project",
      "video": "https://www.youtube.com/watch?v=TaUhpPcvbeM",
      "role1": "1.메인 페이지 UI/UX 및 기능 구현\n    - 실시간 타이머 기능\n    - 차량 검색 기능\n\n2. 백엔드 API 개발\n    - 중고차 조회 API\n    - 위클리 특가 API\n    - 중고차량 추가 API\n    - 카카오 소셜 로그인 API",
      "role2": "3. Redis 캐싱을 활용한 성능 최적화"
    },
    "QnA": [
      {
        "id": "process",
        "question": "프로젝트는 어떤 식으로 진행됐나요?",
        "answer": "유레카 sw 교육과정을 들으며 배운 백엔드를 이해하기 위해 미니 프로젝트를 진행했습니다. 총 2명이 진행하였고, 각자 로그인/회원가입과 메인페이지 둘로 업무를 나누어 진행했습니다. 일주일이라는 짧은 기간이었기에 핵심 기능들을 구현하며 백엔드와 프론트의 메커니즘을 이해하고자 노력했습니다."
      },
      {
        "id": "disappointing",
        "question": "이 프로젝트에서 아쉬운/보완하고 싶은 점은 무엇인가요?",
        "answer": "제한된 기간으로 인해 상세 페이지 구현까지는 진행하지 못한 점이 아쉬웠습니다. 특히, 차량 상세 페이지에서 비슷한 차량을 추천해주는 기능을 구현하고자 했으나 시간 부족으로 미완성에 그쳤습니다.\n추후에는 JWT를 활용한 인증 처리와, 게시판/후기 작성 등 기능을 추가하여 사용자 경험을 더욱 풍부하게 하고 싶습니다."
      }
    ]
  },
  {
    "id": 9,
    "date": "24.1 ~ 25.4",
    "name": "portfolio",
    "detail": "프론트엔드 개발자로서 역량을 보여주기 위해 직접 설계하고 구현한 포트폴리오",
    "img": "images/main/leeyeeun.webp",
    "icon": "images/icon/portfolio.webp",
    "team": false,
    "skills": {
      "skill": "REACT, JAVASCRIPT, GSAP",
      "detail": "프론트엔드 개발자로서의 기술 역량과 디자인 감각을 보여주기 위해 기획부터 디자인, 개발, 배포까지 직접 진행한 포트폴리오 웹사이트입니다. React 기반으로 구성하였으며, 다양한 인터랙션 요소와 반응형 디자인을 적용해 사용자 경험을 고려한 결과물을 완성했습니다.",
      "github": "https://github.com/yeeun426/personal-portfolio",
      "role1": "1. 전체 페이지 구조 기획 및 개발\n- About, Skills, Projects, Contact 등 명확하게 섹션 구분\n- figma를 통해 페르소나와 시나리오 분석 후 플로우 차트와 와이어프레임 제작\n\n2. GSAP를 활용한 인터랙션 구현\n- 스크롤 트리거 기반의 자연스러운 컴포넌트 등장 효과\n- 타이밍과 속도를 조절해 사용자 몰입감을 높임",
      "role2": "3. 반응형 웹 구현\n- 다양한 디바이스 해상도 대응\n- 미디어 쿼리 및 플렉서블 레이아웃 적용"
    },
    "QnA": [
      {
        "id": "process",
        "question": "프로젝트는 어떤 식으로 진행됐나요?",
        "answer": "단순히 정보를 나열하기보다는, 사용자에게 전달하고자 하는 메시지를 효과적으로 전달할 수 있도록 기획부터 개발까지 전 과정을 혼자 진행했습니다.\nFigma를 통해 페르소나와 사용자 시나리오를 분석하고, 플로우 차트와 와이어프레임을 제작하여 전반적인 서비스 흐름을 설계했습니다.\n특히 ‘프로젝트’ 페이지가 핵심이 될 것이라 판단하여, 프로젝트 설명과 기술 스택, 결과물을 직관적으로 전달하는 구성에 집중했습니다."
      },
      {
        "id": "learn",
        "question": "이 프로젝트를 통해 배운점은 뭐가 있나요?",
        "answer": "[GSAP]\n애니메이션 흐름을 직접 제어하면서, 인터랙티브 UI 구현에 대한 감각을 기를 수 있었고, 사용자 경험을 디자인할 수 있는 기술적 기반을 마련할 수 있었습니다.\n\n[인사팀의 관점 고려]\n실제 이 웹사이트가 포트폴리오 역할을 하기에, 디자인과 내용 구성을 비개발자도 이해할 수 있도록 설계했습니다. 중요한 정보는 눈에 띄게 배치하고, 프로젝트 설명은 짧고 명확하게 전달하도록 구성했습니다.\n\n[반응형 UI 설계]\n다양한 뷰포트를 고려하며 레이아웃을 설계하면서, 유저 중심의 UI를 구현하기 위해 어떤 요소를 고려해야 하는지 더 깊이 있게 이해할 수 있었습니다."
      },
      {
        "id": "disappointing",
        "question": "이 프로젝트에서 아쉬운/보완하고 싶은 점은 무엇인가요?",
        "answer": "GSAP를 처음 사용하다 보니, 스크롤 트리거와 타이밍 제어에서 예상치 못한 레이아웃 깨짐 현상이 발생했습니다. 다양한 예제를 참고하며 디버깅한 경험이 도움이 되었습니다.\n디자인적으로 좀 더 유니크하고 브랜딩된 느낌을 주고 싶었지만, 개발에 초점을 맞추느라 비주얼적 요소는 다소 부족했던 점이 아쉬웠습니다."
      }
    ]
  }
]
